===========================================================
Flib-Coevo: Enrichign Fragment Libraries using Co-evolution
===========================================================

Saulo de Oliveira - September - 2017
Current Version: 1.01

1. INSTALLATION
^^^^^^^^^^^^^^^

Change to the directory where you have installed ``Flib-Coevo``
and type:

.. code:: bash
   
   $> make

This will generate executables in ``./bin/``.


2. DEPENDENCIES
^^^^^^^^^^^^^^^
Flib-Coevo does not require any additional software to be executed. 

However, Flib-Coevo requires five input files and accepts a sixth optional file:

1. PDB_ID.fasta.txt : The fasta sequence of the target.
2. PDB_ID.fasta.ss  : The predicted secondary structure of the target as output by PSIPRED
3. PDB_ID.spXout    : The predicted torsion angles of the target as output by SPINE-X.
4. PDB_ID.hhr       : Threading hits as generated by HHBlits.
5. PDB_ID.con       : A three-column predicted contact file in the format (res1 res2 score).
6. PDB_ID.homol     : A text file listing all the homologs to the target (one PDB\_ID per line).

The script ``scripts/install_dependencies.py`` can be used to install some of Flib-Coevo's dependencies.

An example of each of these files for protein 1AIU can be found in the folder *examples*.

On top of the required input files, Flib-Coevo also requires a local version of the Protein Data Bank (PDB). All the ".pdb" files should be grouped under the same folder and their IDs should be in lower case. 

Local versions of the following software can be incorporated into Flib-Coevo's pipeline:

1. PSIPRED
2. HHSearch/HHBlits
3. SPIDER-2
4. BLAST
5. MetaPSICOV

The script ``scripts/install_dependencies.py`` can be used to install some of Flib-Coevo's dependencies.

To generate a SAINT2-compliant library, the Python script ``scripts/process_new.py`` should be executed. This script requires Python 2.6 or higher and the Biopython Module.

3. CONFIGURATION
^^^^^^^^^^^^^^^^
In order to configure Flib-Coevo, alter the path names on the file ``run_flib_coevo_pipeline.sh``.

Make sure to provide the correct paths to Flib-Coevo and to the local version of the PDB.

4. RUNNING FLIB-COEVO
^^^^^^^^^^^^^^^^^^^^^
To generate fragment libraries for protein structure prediction using Flib-Coevo, you should use the script ``run_flib_coevo_pipeline.sh`` as follows:

.. code:: bash
   
   $> export FLIB=<PATH TO FLIB-COEVO>
   $> $FLIB/run_flib_coevo_pipeline.sh 1AIU

The following example should generate the fragment library file "1AIU.lib".

5. TROUBLESHOOTING
^^^^^^^^^^^^^^^^^^
Contact sauloho@gmail.com for any problems you may experience using Flib-Coevo.

